{"posts":[{"title":"About_Me","text":"That’s me.","link":"/2024/08/21/About-Me/"},{"title":"Python Decorator","text":"“Decorator” in Python is a super interesting concept. In real life, when we “decorate” our house, we are actually icing on the cake because the core functionality for a house is to provide a shelter for us, which is not changed by decoration. Likewise, a decorator in Python can expand the functionality of a function/class without modifying its source code. At the begining, let’s have a first impression about how a decorator looks like. 123@greetdef introduce(name): print(f'Hello everyone, my name is {name}.') Assume the functionality of decorator greet is to add a greeting sentence: “Nice to meet you!”. Then, if we run introduce('Lida'), we can get 12Hello everyone, my name is Lida.Nice to meet you!","link":"/2024/10/10/articles/python_decorator/"}],"tags":[{"name":"test","slug":"test","link":"/tags/test/"}],"categories":[{"name":"test","slug":"test","link":"/categories/test/"},{"name":"article","slug":"article","link":"/categories/article/"}],"pages":[{"title":"Lida Guo","text":"","link":"/index.html"},{"title":"About me","text":"That’s me.","link":"/about/index.html"},{"title":"Curriculum Vitae","text":"Curriculum VitaeHi.","link":"/curriculums/index.html"},{"title":"Lida Guo","text":"","link":"/articles/index.html"},{"title":"essay","text":"","link":"/essay/index.html"}]}